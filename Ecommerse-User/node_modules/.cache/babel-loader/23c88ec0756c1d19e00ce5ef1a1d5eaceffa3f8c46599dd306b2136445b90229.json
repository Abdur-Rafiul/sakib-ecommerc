{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CurlFtpAuth = exports.CurlAuth = void 0;\n/**\r\n * Copyright (c) Jonathan Cardoso Machado. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n// https://github.com/curl/curl/blob/e1be82545348/include/curl/curl.h#L725\n/**\r\n * Object with bitmasks that should be used with the `HTTPAUTH` and `PROXYAUTH` options.\r\n *\r\n * `CURLAUTH_BASIC` becomes `CurlAuth.Basic`\r\n *\r\n * **NOTE:** The option `Only` (`CURLAUTH_ONLY`) cannot be safely used on bitwise operations, because it represents a integer larger\r\n *  than 32 bits, if you need to use it, you must do the bitwise operation without using the operators.\r\n *\r\n * See following StackOverflow questions for more info:\r\n *  https://stackoverflow.com/q/39660274/710693\r\n *  https://stackoverflow.com/q/3637702/710693\r\n *\r\n * @public\r\n */\nvar CurlAuth;\n(function (CurlAuth) {\n  CurlAuth[CurlAuth[\"None\"] = 0] = \"None\";\n  CurlAuth[CurlAuth[\"Basic\"] = 1] = \"Basic\";\n  CurlAuth[CurlAuth[\"Digest\"] = 2] = \"Digest\";\n  CurlAuth[CurlAuth[\"Negotiate\"] = 4] = \"Negotiate\";\n  /**\r\n   * Deprecated since the advent of Negotiate\r\n   */\n  CurlAuth[CurlAuth[\"GssNegotiate\"] = 4] = \"GssNegotiate\";\n  /**\r\n   * Used for option `SOCKS5_AUTH` to stay terminologically correct\r\n   */\n  CurlAuth[CurlAuth[\"GssApi\"] = 4] = \"GssApi\";\n  CurlAuth[CurlAuth[\"Ntlm\"] = 8] = \"Ntlm\";\n  CurlAuth[CurlAuth[\"DigestIe\"] = 16] = \"DigestIe\";\n  CurlAuth[CurlAuth[\"NtlmWb\"] = 32] = \"NtlmWb\";\n  CurlAuth[CurlAuth[\"Bearer\"] = 64] = \"Bearer\";\n  CurlAuth[CurlAuth[\"AwsSigV4\"] = 128] = \"AwsSigV4\";\n  // cannot use 1 << 31 like on libcurl, because bitwise operations on js are limited to 32 bits, so that would overflow\n  CurlAuth[CurlAuth[\"Only\"] = 2147483648] = \"Only\";\n  CurlAuth[CurlAuth[\"Any\"] = -17] = \"Any\";\n  CurlAuth[CurlAuth[\"AnySafe\"] = -18] = \"AnySafe\";\n})(CurlAuth = exports.CurlAuth || (exports.CurlAuth = {}));\n// https://github.com/curl/curl/blob/e1be825453/include/curl/curl.h#L853\n/**\r\n * Object with constants for option `FTPSSLAUTH`\r\n *\r\n * `CURLFTPAUTH_DEFAULT` becomes `CurlFtpAuth.Default`\r\n *\r\n * @public\r\n */\nvar CurlFtpAuth;\n(function (CurlFtpAuth) {\n  CurlFtpAuth[CurlFtpAuth[\"Default\"] = 0] = \"Default\";\n  CurlFtpAuth[CurlFtpAuth[\"Ssl\"] = 1] = \"Ssl\";\n  CurlFtpAuth[CurlFtpAuth[\"Tls\"] = 2] = \"Tls\";\n})(CurlFtpAuth = exports.CurlFtpAuth || (exports.CurlFtpAuth = {}));","map":{"version":3,"names":["CurlAuth","exports","CurlFtpAuth"],"sources":["D:\\Rabbil Laravel\\Ecommerce-Project\\Ecommerse-User\\node_modules\\node-libcurl\\lib\\enum\\CurlAuth.ts"],"sourcesContent":["/**\n * Copyright (c) Jonathan Cardoso Machado. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// https://github.com/curl/curl/blob/e1be82545348/include/curl/curl.h#L725\n/**\n * Object with bitmasks that should be used with the `HTTPAUTH` and `PROXYAUTH` options.\n *\n * `CURLAUTH_BASIC` becomes `CurlAuth.Basic`\n *\n * **NOTE:** The option `Only` (`CURLAUTH_ONLY`) cannot be safely used on bitwise operations, because it represents a integer larger\n *  than 32 bits, if you need to use it, you must do the bitwise operation without using the operators.\n *\n * See following StackOverflow questions for more info:\n *  https://stackoverflow.com/q/39660274/710693\n *  https://stackoverflow.com/q/3637702/710693\n *\n * @public\n */\nexport enum CurlAuth {\n  None = 0,\n  Basic = 1 << 0,\n  Digest = 1 << 1,\n  Negotiate = 1 << 2,\n  /**\n   * Deprecated since the advent of Negotiate\n   */\n  GssNegotiate = Negotiate,\n  /**\n   * Used for option `SOCKS5_AUTH` to stay terminologically correct\n   */\n  GssApi = Negotiate,\n  Ntlm = 1 << 3,\n  DigestIe = 1 << 4,\n  NtlmWb = 1 << 5,\n  Bearer = 1 << 6,\n  AwsSigV4 = 1 << 7,\n  // cannot use 1 << 31 like on libcurl, because bitwise operations on js are limited to 32 bits, so that would overflow\n  Only = 2147483648,\n  Any = ~DigestIe,\n  AnySafe = ~(Basic | DigestIe),\n}\n\n// https://github.com/curl/curl/blob/e1be825453/include/curl/curl.h#L853\n/**\n * Object with constants for option `FTPSSLAUTH`\n *\n * `CURLFTPAUTH_DEFAULT` becomes `CurlFtpAuth.Default`\n *\n * @public\n */\nexport enum CurlFtpAuth {\n  Default,\n  Ssl,\n  Tls,\n}\n"],"mappings":";;;;;;AAAA;;;;;;AAMA;AACA;;;;;;;;;;;;;;AAcA,IAAYA,QAsBX;AAtBD,WAAYA,QAAQ;EAClBA,QAAA,CAAAA,QAAA,sBAAQ;EACRA,QAAA,CAAAA,QAAA,wBAAc;EACdA,QAAA,CAAAA,QAAA,0BAAe;EACfA,QAAA,CAAAA,QAAA,gCAAkB;EAClB;;;EAGAA,QAAA,CAAAA,QAAA,sCAAwB;EACxB;;;EAGAA,QAAA,CAAAA,QAAA,0BAAkB;EAClBA,QAAA,CAAAA,QAAA,sBAAa;EACbA,QAAA,CAAAA,QAAA,+BAAiB;EACjBA,QAAA,CAAAA,QAAA,2BAAe;EACfA,QAAA,CAAAA,QAAA,2BAAe;EACfA,QAAA,CAAAA,QAAA,gCAAiB;EACjB;EACAA,QAAA,CAAAA,QAAA,+BAAiB;EACjBA,QAAA,CAAAA,QAAA,sBAAe;EACfA,QAAA,CAAAA,QAAA,8BAA6B;AAC/B,CAAC,EAtBWA,QAAQ,GAARC,OAAA,CAAAD,QAAQ,KAARC,OAAA,CAAAD,QAAQ;AAwBpB;AACA;;;;;;;AAOA,IAAYE,WAIX;AAJD,WAAYA,WAAW;EACrBA,WAAA,CAAAA,WAAA,4BAAO;EACPA,WAAA,CAAAA,WAAA,oBAAG;EACHA,WAAA,CAAAA,WAAA,oBAAG;AACL,CAAC,EAJWA,WAAW,GAAXD,OAAA,CAAAC,WAAW,KAAXD,OAAA,CAAAC,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}