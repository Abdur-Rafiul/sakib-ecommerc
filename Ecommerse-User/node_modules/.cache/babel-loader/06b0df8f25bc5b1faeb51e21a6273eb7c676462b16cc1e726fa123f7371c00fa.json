{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CurlProtocol = void 0;\n/**\r\n * Copyright (c) Jonathan Cardoso Machado. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n// https://github.com/curl/curl/blob/e1be8254534898fccafc5d6cd04f6235f283cfbd/include/curl/curl.h#L893\n// not following Enum name convention here because it feels more natural that way\n/**\r\n * Object with the protocols supported by libcurl, as bitmasks.\r\n * Should be used when setting `PROTOCOLS` and `REDIR_PROTOCOLS` options.\r\n *\r\n * `CURLPROTO_HTTP` becomes `CurlProtocol.HTTP`\r\n *\r\n * @public\r\n */\nvar CurlProtocol;\n(function (CurlProtocol) {\n  CurlProtocol[CurlProtocol[\"HTTP\"] = 1] = \"HTTP\";\n  CurlProtocol[CurlProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n  CurlProtocol[CurlProtocol[\"FTP\"] = 4] = \"FTP\";\n  CurlProtocol[CurlProtocol[\"FTPS\"] = 8] = \"FTPS\";\n  CurlProtocol[CurlProtocol[\"SCP\"] = 16] = \"SCP\";\n  CurlProtocol[CurlProtocol[\"SFTP\"] = 32] = \"SFTP\";\n  CurlProtocol[CurlProtocol[\"TELNET\"] = 64] = \"TELNET\";\n  CurlProtocol[CurlProtocol[\"LDAP\"] = 128] = \"LDAP\";\n  CurlProtocol[CurlProtocol[\"LDAPS\"] = 256] = \"LDAPS\";\n  CurlProtocol[CurlProtocol[\"DICT\"] = 512] = \"DICT\";\n  CurlProtocol[CurlProtocol[\"FILE\"] = 1024] = \"FILE\";\n  CurlProtocol[CurlProtocol[\"TFTP\"] = 2048] = \"TFTP\";\n  CurlProtocol[CurlProtocol[\"IMAP\"] = 4096] = \"IMAP\";\n  CurlProtocol[CurlProtocol[\"IMAPS\"] = 8192] = \"IMAPS\";\n  CurlProtocol[CurlProtocol[\"POP3\"] = 16384] = \"POP3\";\n  CurlProtocol[CurlProtocol[\"POP3S\"] = 32768] = \"POP3S\";\n  CurlProtocol[CurlProtocol[\"SMTP\"] = 65536] = \"SMTP\";\n  CurlProtocol[CurlProtocol[\"SMTPS\"] = 131072] = \"SMTPS\";\n  CurlProtocol[CurlProtocol[\"RTSP\"] = 262144] = \"RTSP\";\n  CurlProtocol[CurlProtocol[\"RTMP\"] = 524288] = \"RTMP\";\n  CurlProtocol[CurlProtocol[\"RTMPT\"] = 1048576] = \"RTMPT\";\n  CurlProtocol[CurlProtocol[\"RTMPE\"] = 2097152] = \"RTMPE\";\n  CurlProtocol[CurlProtocol[\"RTMPTE\"] = 4194304] = \"RTMPTE\";\n  CurlProtocol[CurlProtocol[\"RTMPS\"] = 8388608] = \"RTMPS\";\n  CurlProtocol[CurlProtocol[\"RTMPTS\"] = 16777216] = \"RTMPTS\";\n  CurlProtocol[CurlProtocol[\"GOPHER\"] = 33554432] = \"GOPHER\";\n  CurlProtocol[CurlProtocol[\"SMB\"] = 67108864] = \"SMB\";\n  CurlProtocol[CurlProtocol[\"SMBS\"] = 134217728] = \"SMBS\";\n  CurlProtocol[CurlProtocol[\"MQTT\"] = 268435456] = \"MQTT\";\n  CurlProtocol[CurlProtocol[\"GOPHERS\"] = 536870912] = \"GOPHERS\";\n  CurlProtocol[CurlProtocol[\"ALL\"] = -1] = \"ALL\";\n})(CurlProtocol = exports.CurlProtocol || (exports.CurlProtocol = {}));","map":{"version":3,"names":["CurlProtocol","exports"],"sources":["D:\\Rabbil Laravel\\Ecommerce-Project\\Ecommerse-User\\node_modules\\node-libcurl\\lib\\enum\\CurlProtocol.ts"],"sourcesContent":["/**\n * Copyright (c) Jonathan Cardoso Machado. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// https://github.com/curl/curl/blob/e1be8254534898fccafc5d6cd04f6235f283cfbd/include/curl/curl.h#L893\n// not following Enum name convention here because it feels more natural that way\n/**\n * Object with the protocols supported by libcurl, as bitmasks.\n * Should be used when setting `PROTOCOLS` and `REDIR_PROTOCOLS` options.\n *\n * `CURLPROTO_HTTP` becomes `CurlProtocol.HTTP`\n *\n * @public\n */\nexport enum CurlProtocol {\n  HTTP = 1 << 0,\n  HTTPS = 1 << 1,\n  FTP = 1 << 2,\n  FTPS = 1 << 3,\n  SCP = 1 << 4,\n  SFTP = 1 << 5,\n  TELNET = 1 << 6,\n  LDAP = 1 << 7,\n  LDAPS = 1 << 8,\n  DICT = 1 << 9,\n  FILE = 1 << 10,\n  TFTP = 1 << 11,\n  IMAP = 1 << 12,\n  IMAPS = 1 << 13,\n  POP3 = 1 << 14,\n  POP3S = 1 << 15,\n  SMTP = 1 << 16,\n  SMTPS = 1 << 17,\n  RTSP = 1 << 18,\n  RTMP = 1 << 19,\n  RTMPT = 1 << 20,\n  RTMPE = 1 << 21,\n  RTMPTE = 1 << 22,\n  RTMPS = 1 << 23,\n  RTMPTS = 1 << 24,\n  GOPHER = 1 << 25,\n  SMB = 1 << 26,\n  SMBS = 1 << 27,\n  MQTT = 1 << 28,\n  GOPHERS = 1 << 29,\n  ALL = ~0,\n}\n"],"mappings":";;;;;;AAAA;;;;;;AAMA;AACA;AACA;;;;;;;;AAQA,IAAYA,YAgCX;AAhCD,WAAYA,YAAY;EACtBA,YAAA,CAAAA,YAAA,sBAAa;EACbA,YAAA,CAAAA,YAAA,wBAAc;EACdA,YAAA,CAAAA,YAAA,oBAAY;EACZA,YAAA,CAAAA,YAAA,sBAAa;EACbA,YAAA,CAAAA,YAAA,qBAAY;EACZA,YAAA,CAAAA,YAAA,uBAAa;EACbA,YAAA,CAAAA,YAAA,2BAAe;EACfA,YAAA,CAAAA,YAAA,wBAAa;EACbA,YAAA,CAAAA,YAAA,0BAAc;EACdA,YAAA,CAAAA,YAAA,wBAAa;EACbA,YAAA,CAAAA,YAAA,yBAAc;EACdA,YAAA,CAAAA,YAAA,yBAAc;EACdA,YAAA,CAAAA,YAAA,yBAAc;EACdA,YAAA,CAAAA,YAAA,2BAAe;EACfA,YAAA,CAAAA,YAAA,0BAAc;EACdA,YAAA,CAAAA,YAAA,4BAAe;EACfA,YAAA,CAAAA,YAAA,0BAAc;EACdA,YAAA,CAAAA,YAAA,6BAAe;EACfA,YAAA,CAAAA,YAAA,2BAAc;EACdA,YAAA,CAAAA,YAAA,2BAAc;EACdA,YAAA,CAAAA,YAAA,8BAAe;EACfA,YAAA,CAAAA,YAAA,8BAAe;EACfA,YAAA,CAAAA,YAAA,gCAAgB;EAChBA,YAAA,CAAAA,YAAA,8BAAe;EACfA,YAAA,CAAAA,YAAA,iCAAgB;EAChBA,YAAA,CAAAA,YAAA,iCAAgB;EAChBA,YAAA,CAAAA,YAAA,2BAAa;EACbA,YAAA,CAAAA,YAAA,8BAAc;EACdA,YAAA,CAAAA,YAAA,8BAAc;EACdA,YAAA,CAAAA,YAAA,oCAAiB;EACjBA,YAAA,CAAAA,YAAA,qBAAQ;AACV,CAAC,EAhCWA,YAAY,GAAZC,OAAA,CAAAD,YAAY,KAAZC,OAAA,CAAAD,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}