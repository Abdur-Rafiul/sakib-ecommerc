{"ast":null,"code":"const {\n  Curl\n} = require('node-libcurl');\nconst QSTR = require('querystring');\nconst SHA = require('./sha-one');\nconst CONF = {\n  IP: '',\n  DOM: '',\n  STO: '',\n  SIG: '',\n  KEY: '',\n  SPL: []\n};\n\n// let ENC = (obj) => Object.keys(obj).map(k => encodeURIComponent(k)+'='+encodeURIComponent(obj[k])).join('&')\nconst ENC = obj => QSTR.stringify(obj);\nconst CURL = function (data) {\n  let cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x => x;\n  let errCB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : x => x;\n  const curl = new Curl();\n  let $fields = PAY._opts(data),\n    $fields_string = ENC($fields),\n    $count_fields = Object.keys($fields).length,\n    $domain = CONF.DOM,\n    $url = `https://secure.aamarpay.com/request.php`,\n    $ip = CONF.IP;\n  // console.info($fields);\n  // console.info('---');\n  // curl.setOpt('FOLLOWLOCATION', true);\n  curl.setOpt('HTTPHEADER', [`REMOTE_ADDR: ${$ip}`, `HTTP_X_FORWARDED_FOR: ${$ip}`]);\n  curl.setOpt('SSL_VERIFYHOST', false);\n  curl.setOpt('URL', $url);\n  curl.setOpt('REFERER', $domain);\n  curl.setOpt('INTERFACE', $ip);\n  curl.setOpt('POST', $count_fields);\n  curl.setOpt('POSTFIELDS', $fields_string);\n  // curl.setOpt('RETURNTRANSFER', true);\n  curl.on('end', function (statusCode, data, headers) {\n    // console.info(statusCode)\n    // console.info(data.length);\n    // console.info(this.getInfo('TOTAL_TIME'));\n    this.close();\n    let track = PAY.track(data),\n      url = PAY.url(track);\n    cb({\n      statusCode,\n      data,\n      headers,\n      track,\n      url\n    });\n  });\n  curl.on('error', function (statusCode, data, headers) {\n    curl.close.bind(curl)(statusCode, data, headers);\n    errCB({\n      statusCode,\n      data,\n      headers\n    });\n  });\n  curl.perform();\n};\nconst PAY = {\n  init(_ref) {\n    let {\n      ip,\n      domain,\n      storeId,\n      signatureKey,\n      hashKey\n    } = _ref;\n    CONF.IP = ip;\n    CONF.DOM = domain;\n    CONF.STO = storeId;\n    CONF.SIG = signatureKey;\n    CONF.KEY = hashKey;\n    CONF.SPL = hashKey.split('');\n  },\n  _opts: opt => {\n    let def = {\n      store_id: CONF.STO,\n      tran_id: '',\n      success_url: '',\n      fail_url: '',\n      cancel_url: '',\n      ipn_url: '',\n      // opt_a: '',// optional\n      // opt_b: '',// optional\n      // opt_c: '',// optional\n      // opt_d: '',// optional\n      amount: '',\n      // payment_type: '',// optional\n      currency: 'BDT',\n      signature_key: CONF.SIG,\n      desc: '',\n      cus_name: '',\n      cus_email: '',\n      cus_add1: '',\n      // cus_add2: '',// optional\n      cus_city: '',\n      cus_state: '',\n      cus_postcode: '',\n      cus_country: '',\n      cus_phone: ''\n      // all ship_* are optional\n      // ship_name: '',\n      // ship_add1: '',\n      // ship_add2: '',\n      // ship_city: '',\n      // ship_state: '',\n      // ship_postcode: '',\n      // ship_country: '',\n    };\n\n    Object.keys(opt).forEach(k => {\n      def[k] = opt[k];\n    });\n    return def;\n  },\n  post() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return new Promise((cb, errCB) => {\n      CURL(PAY._opts(data), cb, errCB);\n    });\n  },\n  token() {\n    let seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '0';\n    if ((seed + '').length < 1) return false;\n    let a = (seed + '').repeat(Math.ceil(CONF.SPL.length / seed.length)).substr(0, CONF.SPL.length).split('');\n    let b = Array.from(CONF.SPL);\n    let c = [];\n    for (let i = 0; i < b.length; i++) c.push(b[i], a[i]);\n    return SHA(c.join(''));\n  },\n  verify(seed, token) {\n    let t = this.token(seed);\n    return t && t === token;\n  },\n  track(l) {\n    return l.replace(`\"\\\\/paynow.php?track=`, ``).replace(`\"`, ``);\n  },\n  url(t) {\n    return `https://secure.aamarpay.com/paynow.php?track=${t}`;\n  }\n};\nmodule.exports = PAY;","map":{"version":3,"names":["Curl","require","QSTR","SHA","CONF","IP","DOM","STO","SIG","KEY","SPL","ENC","obj","stringify","CURL","data","cb","arguments","length","undefined","x","errCB","curl","$fields","PAY","_opts","$fields_string","$count_fields","Object","keys","$domain","$url","$ip","setOpt","on","statusCode","headers","close","track","url","bind","perform","init","_ref","ip","domain","storeId","signatureKey","hashKey","split","opt","def","store_id","tran_id","success_url","fail_url","cancel_url","ipn_url","amount","currency","signature_key","desc","cus_name","cus_email","cus_add1","cus_city","cus_state","cus_postcode","cus_country","cus_phone","forEach","k","post","Promise","token","seed","a","repeat","Math","ceil","substr","b","Array","from","c","i","push","join","verify","t","l","replace","module","exports"],"sources":["D:/Rabbil Laravel/Ecommerce-Project/Ecommerse-User/node_modules/aamarpay/aamarpay.js"],"sourcesContent":["const { Curl } = require('node-libcurl');\r\nconst QSTR = require('querystring');\r\n\r\nconst SHA = require('./sha-one')\r\n\r\nconst CONF = {\r\n\tIP: '',\r\n\tDOM: '',\r\n\tSTO: '',\r\n\tSIG: '',\r\n\tKEY: '',\r\n\tSPL: [],\r\n};\r\n\r\n// let ENC = (obj) => Object.keys(obj).map(k => encodeURIComponent(k)+'='+encodeURIComponent(obj[k])).join('&')\r\nconst ENC = (obj) => QSTR.stringify(obj)\r\n\r\nconst CURL = (data, cb=x=>x, errCB=x=>x) => {\r\n\tconst curl = new Curl();\r\n\tlet $fields = PAY._opts(data),\r\n\t\t$fields_string = ENC($fields),\r\n\t\t$count_fields = Object.keys($fields).length,\r\n\t\t$domain = CONF.DOM,\r\n\t\t$url = `https://secure.aamarpay.com/request.php`,\r\n\t\t$ip = CONF.IP;\r\n\t// console.info($fields);\r\n\t// console.info('---');\r\n\t// curl.setOpt('FOLLOWLOCATION', true);\r\n\tcurl.setOpt('HTTPHEADER', [`REMOTE_ADDR: ${$ip}`, `HTTP_X_FORWARDED_FOR: ${$ip}`]);\r\n\tcurl.setOpt('SSL_VERIFYHOST', false);\r\n\tcurl.setOpt('URL', $url);\r\n\tcurl.setOpt('REFERER', $domain);\r\n\tcurl.setOpt('INTERFACE', $ip);\r\n\tcurl.setOpt('POST', $count_fields);\r\n\tcurl.setOpt('POSTFIELDS', $fields_string);\r\n\t// curl.setOpt('RETURNTRANSFER', true);\r\n\tcurl.on('end', function (statusCode, data, headers) {\r\n\t\t// console.info(statusCode)\r\n\t\t// console.info(data.length);\r\n\t\t// console.info(this.getInfo('TOTAL_TIME'));\r\n\t\tthis.close();\r\n\t\tlet track = PAY.track(data), url = PAY.url(track)\r\n\t\tcb({ statusCode, data, headers, track, url });\r\n\t});\r\n\tcurl.on('error', function (statusCode, data, headers) {\r\n\t\tcurl.close.bind(curl)(statusCode, data, headers);\r\n\t\terrCB({ statusCode, data, headers });\r\n\t});\r\n\tcurl.perform();\r\n}\r\n\r\nconst PAY = {\r\n\tinit({ip, domain, storeId, signatureKey, hashKey}) {\r\n\t\tCONF.IP = ip\r\n\t\tCONF.DOM = domain\r\n\t\tCONF.STO = storeId\r\n\t\tCONF.SIG = signatureKey\r\n\t\tCONF.KEY = hashKey\r\n\t\tCONF.SPL = hashKey.split('')\r\n\t},\r\n\t_opts: (opt) => {\r\n\t\tlet def = {\r\n\t\t\tstore_id: CONF.STO,\r\n\t\t\ttran_id: '',\r\n\t\t\tsuccess_url: '',\r\n\t\t\tfail_url: '',\r\n\t\t\tcancel_url: '',\r\n\t\t\tipn_url: '',\r\n\t\t\t// opt_a: '',// optional\r\n\t\t\t// opt_b: '',// optional\r\n\t\t\t// opt_c: '',// optional\r\n\t\t\t// opt_d: '',// optional\r\n\t\t\tamount: '',\r\n\t\t\t// payment_type: '',// optional\r\n\t\t\tcurrency: 'BDT',\r\n\t\t\tsignature_key: CONF.SIG,\r\n\t\t\tdesc: '',\r\n\t\t\tcus_name: '',\r\n\t\t\tcus_email: '',\r\n\t\t\tcus_add1: '',\r\n\t\t\t// cus_add2: '',// optional\r\n\t\t\tcus_city: '',\r\n\t\t\tcus_state: '',\r\n\t\t\tcus_postcode: '',\r\n\t\t\tcus_country: '',\r\n\t\t\tcus_phone: '',\r\n\t\t\t// all ship_* are optional\r\n\t\t\t// ship_name: '',\r\n\t\t\t// ship_add1: '',\r\n\t\t\t// ship_add2: '',\r\n\t\t\t// ship_city: '',\r\n\t\t\t// ship_state: '',\r\n\t\t\t// ship_postcode: '',\r\n\t\t\t// ship_country: '',\r\n\t\t}\r\n\t\tObject.keys(opt).forEach(k => { def[k] = opt[k] })\r\n\t\treturn def\r\n\t},\r\n\tpost(data={}) {\r\n\t\treturn new Promise((cb, errCB) => {\r\n\t\t\tCURL(PAY._opts(data), cb, errCB)\r\n\t\t})\r\n\t},\r\n\ttoken(seed='0') {\r\n\t\tif((seed+'').length < 1) return false\r\n\t\tlet a = (seed+'').repeat(Math.ceil(CONF.SPL.length/seed.length)).substr(0,CONF.SPL.length).split('')\r\n\t\tlet b = Array.from(CONF.SPL)\r\n\t\tlet c = []\r\n\t\tfor(let i=0; i<b.length; i++) c.push(b[i], a[i])\r\n\t\treturn SHA(c.join(''))\r\n\t},\r\n\tverify(seed,token) {\r\n\t\tlet t = this.token(seed)\r\n\t\treturn (t && t === token)\r\n\t},\r\n\ttrack(l) {\r\n\t\treturn l.replace(`\"\\\\/paynow.php?track=`,``).replace(`\"`,``)\r\n\t},\r\n\turl(t) {\r\n\t\treturn `https://secure.aamarpay.com/paynow.php?track=${t}`\r\n\t},\r\n}\r\n\r\nmodule.exports = PAY"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}