{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CurlHstsCallback = exports.CurlHsts = void 0;\n/**\r\n * Copyright (c) Jonathan Cardoso Machado. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n// https://github.com/curl/curl/blob/de1004eb0f917b265f187c14d9abaaf7f13f8422/include/curl/curl.h#L995\n/**\r\n * Object with bitmasks that should be used with the `HSTS_CTRL` option.\r\n *\r\n * `CURLAUTH_BASIC` becomes `CurlAuth.Basic`\r\n *\r\n * @public\r\n */\nvar CurlHsts;\n(function (CurlHsts) {\n  /**\r\n   * Disable the in-memory HSTS cache for this handle.\r\n   */\n  CurlHsts[CurlHsts[\"Disabled\"] = 0] = \"Disabled\";\n  /**\r\n   * Enable the in-memory HSTS cache for this handle.\r\n   */\n  CurlHsts[CurlHsts[\"Enable\"] = 1] = \"Enable\";\n  /**\r\n   * Make the HSTS file (if specified) read-only - makes libcurl not save the cache to the file when closing the handle.\r\n   */\n  CurlHsts[CurlHsts[\"ReadonlyFile\"] = 2] = \"ReadonlyFile\";\n})(CurlHsts = exports.CurlHsts || (exports.CurlHsts = {}));\n// https://github.com/curl/curl/blob/de1004eb0f917b265f187c14d9abaaf7f13f8422/include/curl/curl.h#L981-L985\n/**\r\n * Object with constants to be used as the return value for the callbacks set for options `HSTSWRITEFUNCTION` and `HSTSREADFUNCTION`.\r\n *\r\n * `CURLSTS_OK` becomes `CurlHstsCallback.Ok`\r\n *\r\n * @public\r\n */\nvar CurlHstsCallback;\n(function (CurlHstsCallback) {\n  CurlHstsCallback[CurlHstsCallback[\"Ok\"] = 0] = \"Ok\";\n  CurlHstsCallback[CurlHstsCallback[\"Done\"] = 1] = \"Done\";\n  CurlHstsCallback[CurlHstsCallback[\"Fail\"] = 2] = \"Fail\";\n})(CurlHstsCallback = exports.CurlHstsCallback || (exports.CurlHstsCallback = {}));","map":{"version":3,"names":["CurlHsts","exports","CurlHstsCallback"],"sources":["D:\\Rabbil Laravel\\Ecommerce-Project\\Ecommerse-User\\node_modules\\node-libcurl\\lib\\enum\\CurlHsts.ts"],"sourcesContent":["/**\n * Copyright (c) Jonathan Cardoso Machado. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// https://github.com/curl/curl/blob/de1004eb0f917b265f187c14d9abaaf7f13f8422/include/curl/curl.h#L995\n/**\n * Object with bitmasks that should be used with the `HSTS_CTRL` option.\n *\n * `CURLAUTH_BASIC` becomes `CurlAuth.Basic`\n *\n * @public\n */\nexport enum CurlHsts {\n  /**\n   * Disable the in-memory HSTS cache for this handle.\n   */\n  Disabled = 0,\n  /**\n   * Enable the in-memory HSTS cache for this handle.\n   */\n  Enable = 1 << 0,\n  /**\n   * Make the HSTS file (if specified) read-only - makes libcurl not save the cache to the file when closing the handle.\n   */\n  ReadonlyFile = 2 << 0,\n}\n\n// https://github.com/curl/curl/blob/de1004eb0f917b265f187c14d9abaaf7f13f8422/include/curl/curl.h#L981-L985\n/**\n * Object with constants to be used as the return value for the callbacks set for options `HSTSWRITEFUNCTION` and `HSTSREADFUNCTION`.\n *\n * `CURLSTS_OK` becomes `CurlHstsCallback.Ok`\n *\n * @public\n */\nexport enum CurlHstsCallback {\n  Ok = 0,\n  Done = 1,\n  Fail = 2,\n}\n\nexport interface CurlHstsCacheCount {\n  /**\n   * The index for the current cache entry.\n   */\n  index: number\n\n  /**\n   * The total count of cache entries.\n   */\n  count: number\n}\n\nexport interface CurlHstsCacheEntry {\n  /**\n   * The host name.\n   *\n   * Example: `google.com`\n   */\n  host: string\n\n  /**\n   * If subdomains must be included. If not set, defaults to `false`.\n   */\n  includeSubDomains?: boolean\n\n  /**\n   * The expiration date for the cache entry as a string in the following format:\n   * ```\n   * 'YYYYMMDD HH:MM:SS'\n   * ```\n   *\n   * If not set or if null, it will default to a date far away in the future (currently `99991231 23:59:59`).\n   */\n  expire?: string | null\n}\n"],"mappings":";;;;;;AAAA;;;;;;AAMA;AACA;;;;;;;AAOA,IAAYA,QAaX;AAbD,WAAYA,QAAQ;EAClB;;;EAGAA,QAAA,CAAAA,QAAA,8BAAY;EACZ;;;EAGAA,QAAA,CAAAA,QAAA,0BAAe;EACf;;;EAGAA,QAAA,CAAAA,QAAA,sCAAqB;AACvB,CAAC,EAbWA,QAAQ,GAARC,OAAA,CAAAD,QAAQ,KAARC,OAAA,CAAAD,QAAQ;AAepB;AACA;;;;;;;AAOA,IAAYE,gBAIX;AAJD,WAAYA,gBAAgB;EAC1BA,gBAAA,CAAAA,gBAAA,kBAAM;EACNA,gBAAA,CAAAA,gBAAA,sBAAQ;EACRA,gBAAA,CAAAA,gBAAA,sBAAQ;AACV,CAAC,EAJWA,gBAAgB,GAAhBD,OAAA,CAAAC,gBAAgB,KAAhBD,OAAA,CAAAC,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}