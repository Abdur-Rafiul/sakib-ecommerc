{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CurlNetrc = void 0;\n/**\r\n * Copyright (c) Jonathan Cardoso Machado. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n// https://github.com/curl/curl/blob/e1be82545/include/curl/curl.h#L2003\n/**\r\n * To be used with the `NETRC` option\r\n *\r\n * `CURL_NETRC_OPTIONAL` becomes `CurlNetrc.Optional`\r\n *\r\n * @public\r\n */\nvar CurlNetrc;\n(function (CurlNetrc) {\n  /**\r\n   * The .netrc will never be read.\r\n   * This is the default\r\n   */\n  CurlNetrc[CurlNetrc[\"Ignored\"] = 0] = \"Ignored\";\n  /**\r\n   * A user:password in the URL will be preferred to one in the .netrc\r\n   */\n  CurlNetrc[CurlNetrc[\"Optional\"] = 1] = \"Optional\";\n  /**\r\n   * A user:password in the URL will be ignored.\r\n   * Unless one is set programmatically, the .netrc\r\n   * will be queried.\r\n   */\n  CurlNetrc[CurlNetrc[\"Required\"] = 2] = \"Required\";\n})(CurlNetrc = exports.CurlNetrc || (exports.CurlNetrc = {}));","map":{"version":3,"names":["CurlNetrc","exports"],"sources":["D:\\Rabbil Laravel\\Ecommerce-Project\\Ecommerse-User\\node_modules\\node-libcurl\\lib\\enum\\CurlNetrc.ts"],"sourcesContent":["/**\n * Copyright (c) Jonathan Cardoso Machado. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// https://github.com/curl/curl/blob/e1be82545/include/curl/curl.h#L2003\n/**\n * To be used with the `NETRC` option\n *\n * `CURL_NETRC_OPTIONAL` becomes `CurlNetrc.Optional`\n *\n * @public\n */\nexport enum CurlNetrc {\n  /**\n   * The .netrc will never be read.\n   * This is the default\n   */\n  Ignored,\n  /**\n   * A user:password in the URL will be preferred to one in the .netrc\n   */\n  Optional,\n  /**\n   * A user:password in the URL will be ignored.\n   * Unless one is set programmatically, the .netrc\n   * will be queried.\n   */\n  Required,\n}\n"],"mappings":";;;;;;AAAA;;;;;;AAMA;AACA;;;;;;;AAOA,IAAYA,SAgBX;AAhBD,WAAYA,SAAS;EACnB;;;;EAIAA,SAAA,CAAAA,SAAA,4BAAO;EACP;;;EAGAA,SAAA,CAAAA,SAAA,8BAAQ;EACR;;;;;EAKAA,SAAA,CAAAA,SAAA,8BAAQ;AACV,CAAC,EAhBWA,SAAS,GAATC,OAAA,CAAAD,SAAS,KAATC,OAAA,CAAAD,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}