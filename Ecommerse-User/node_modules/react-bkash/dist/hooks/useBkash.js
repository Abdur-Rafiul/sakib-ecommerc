"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useBkash = void 0;
const react_1 = require("react");
const utils_1 = require("../utils");
const useAsync_1 = require("./useAsync");
const BKASH_BUTTON_ID = 'bKash_button';
const useBkash = (config) => {
    const [componentError, setComponentError] = (0, react_1.useState)(null);
    const paymentID = (0, react_1.useRef)(null);
    const createBkashButton = (0, react_1.useCallback)(() => {
        const button = document.createElement('button');
        button.style.display = 'none';
        button.id = BKASH_BUTTON_ID;
        const body = document.querySelector('body');
        if (body) {
            body.appendChild(button);
            return;
        }
    }, []);
    const initBkash = (0, react_1.useCallback)(() => __awaiter(void 0, void 0, void 0, function* () {
        createBkashButton();
        yield (0, utils_1.loadDependencies)(config.bkashScriptURL);
        const bkashConfig = {
            paymentMode: 'checkout',
            paymentRequest: {
                amount: String(config.amount),
                intent: 'sale',
                currency: 'BDT',
            },
            createRequest: (request) => __awaiter(void 0, void 0, void 0, function* () {
                try {
                    const result = yield config.onCreatePayment(request);
                    paymentID.current = result.paymentID;
                    bKash.create().onSuccess(result);
                }
                catch (error) {
                    setComponentError(error);
                    bKash.create().onError();
                }
            }),
            executeRequestOnAuthorization: () => __awaiter(void 0, void 0, void 0, function* () {
                if (!paymentID.current) {
                    return setComponentError(new Error('No payment ID found'));
                }
                try {
                    const result = yield config.onExecutePayment(paymentID.current);
                    config.onSuccess(result);
                }
                catch (error) {
                    setComponentError(error);
                    bKash.execute().onError();
                }
            }),
            onClose: config.onClose,
        };
        if (typeof bKash === 'undefined') {
            setComponentError(new Error('bKash is not initialized properly, please provide a valid bKash script URL'));
            return;
        }
        bKash.init(bkashConfig);
    }), [config, createBkashButton]);
    const triggerBkash = (0, react_1.useCallback)(() => {
        const createdButton = document.getElementById(BKASH_BUTTON_ID);
        if (createdButton) {
            createdButton.click();
            createdButton.remove();
            return;
        }
        setComponentError(new Error('Could not find bkash button on document'));
    }, []);
    const { error, loading } = (0, useAsync_1.useAsync)({ fn: initBkash });
    return {
        error: error || componentError,
        loading,
        triggerBkash,
    };
};
exports.useBkash = useBkash;
//# sourceMappingURL=useBkash.js.map